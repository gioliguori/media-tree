services:
  # ============ INFRA ============

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379" # Redis standard port
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - media-tree

  # ============ JANUS ============

  janus-videoroom:
    build:
      context: ./janus-videoroom
      dockerfile: Dockerfile
    container_name: janus-videoroom
    ports:
      - "8088:8088" # HTTP
      - "8188:8188" # WebSocket
      - "20000-20050:20000-20050/udp" # WebRTC
    volumes:
      - ./janus-videoroom/config:/opt/janus/etc/janus:ro
    environment:
      - JANUS_LOG_LEVEL=4
    networks:
      - media-tree

  janus-streaming-1:
    build:
      context: ./janus-streaming
      dockerfile: Dockerfile
    container_name: janus-streaming-1
    ports:
      - "8089:8088" # HTTP API
      - "8189:8188" # WebSocket
      - "20051-20150:20051-20150/udp" # WebRTC
    volumes:
      - ./janus-streaming/config:/opt/janus/etc/janus:ro
    environment:
      - JANUS_LOG_LEVEL=4
    networks:
      - media-tree

  janus-streaming-2:
    build:
      context: ./janus-streaming
      dockerfile: Dockerfile
    container_name: janus-streaming-2
    ports:
      - "8090:8088" # HTTP API
      - "8190:8188" # WebSocket
      - "20151-20200:20101-20150/udp" # WebRTC
    volumes:
      - ./janus-streaming/config:/opt/janus/etc/janus:ro
    environment:
      - JANUS_LOG_LEVEL=4
    networks:
      - media-tree
    profiles:
      - scale

  # ============ INJECTION NODE ============

  injection-1:
    build:
      context: .
      dockerfile: injection-node/Dockerfile
    container_name: injection-1
    ports:
      - "7070:7070" # REST API e WHIP server
    environment:
      - NODE_ID=injection-1
      - NODE_HOST=injection-1
      - API_PORT=7070

      # RTP ports (for Redis registration only)
      - RTP_AUDIO_PORT=5000
      - RTP_VIDEO_PORT=5002

      # Redis
      - REDIS_HOST=redis
      - REDIS_PORT=6379

      # Janus VideoRoom
      - JANUS_VIDEOROOM_WS_URL=ws://janus-videoroom:8188
      - JANUS_VIDEOROOM_ROOM_SECRET=adminpwd

      # WHIP
      - WHIP_BASE_PATH=/whip
      - WHIP_TOKEN=verysecret

    depends_on:
      - redis
      - janus-videoroom
    networks:
      - media-tree

  # ============ RELAY NODES ============

  relay-1:
    build:
      context: .
      dockerfile: relay-node/Dockerfile
    container_name: relay-1
    ports:
      - "7071:7071" # REST API
      - "5002:5002/udp" # RTP audio INPUT
      - "5004:5004/udp" # RTP video INPUT
    environment:
      - NODE_ID=relay-1
      - NODE_HOST=relay-1
      - API_PORT=7071

      # RTP ports
      - RTP_AUDIO_PORT=5002
      - RTP_VIDEO_PORT=5004

      # Redis
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - media-tree

  relay-2:
    build:
      context: .
      dockerfile: relay-node/Dockerfile
    container_name: relay-2
    ports:
      - "7072:7072" # REST API
      - "5102:5102/udp" # RTP audio INPUT
      - "5104:5104/udp" # RTP video INPUT
    environment:
      - NODE_ID=relay-2
      - NODE_HOST=relay-2
      - API_PORT=7072

      # RTP ports
      - RTP_AUDIO_PORT=5102
      - RTP_VIDEO_PORT=5104

        # Redis
      - REDIS_HOST=redis
      - REDIS_PORT=6379

    depends_on:
      redis:
        condition: service_healthy
    networks:
      - media-tree

  # ============ EGRESS NODE ============

  egress-1:
    build:
      context: .
      dockerfile: egress-node/Dockerfile
    container_name: egress-1
    ports:
      - "7073:7073" # REST API e WHEP server
      - "6000-6100:6000-6100/udp" # PortPool range
    environment:
      - NODE_ID=egress-1
      - NODE_HOST=egress-1
      - API_PORT=7073

      # RTP Input
      - RTP_AUDIO_PORT=5002
      - RTP_VIDEO_PORT=5004

      # PortPool config
      - PORT_POOL_BASE=6000
      - PORT_POOL_SIZE=100

      # Redis
      - REDIS_HOST=redis
      - REDIS_PORT=6379

      # Janus Streaming
      - JANUS_STREAMING_WS_URL=ws://janus-streaming-1:8188
      - JANUS_STREAMING_MOUNTPOINT_SECRET=adminpwd

      # WHEP
      - WHEP_BASE_PATH=/whep
      - WHEP_TOKEN=verysecret
    depends_on:
      - redis
      - janus-streaming-1
    networks:
      - media-tree

  egress-2:
    build:
      context: .
      dockerfile: egress-node/Dockerfile
    container_name: egress-2
    ports:
      - "7074:7074" # REST API e WHEP server
      - "6101-6201:6000-6100/udp" # PortPool range
    environment:
      - NODE_ID=egress-2
      - NODE_HOST=egress-2
      - API_PORT=7074

      # RTP Input
      - RTP_AUDIO_PORT=5002
      - RTP_VIDEO_PORT=5004

      # PortPool config
      - PORT_POOL_BASE=6000
      - PORT_POOL_SIZE=100

      # Redis
      - REDIS_HOST=redis
      - REDIS_PORT=6379

      # Janus Streaming
      - JANUS_STREAMING_WS_URL=ws://janus-streaming-2:8188
      - JANUS_STREAMING_MOUNTPOINT_SECRET=adminpwd

      # WHEP
      - WHEP_BASE_PATH=/whep
      - WHEP_TOKEN=verysecret
    depends_on:
      - redis
      - janus-streaming-2
    networks:
      - media-tree
    profiles:
      - scale

  # ============ WHIP CLIENT ============

  # Broadcaster 1: SSRC 1111/2222 (in realtà possiamo mettere cio che vogliamo
  # tanto seguirà quelli in sessione di janus)
  whip-client-1:
    build:
      context: ./simple-whip-client
      dockerfile: Dockerfile
    container_name: whip-client-1
    environment:
      - URL=http://injection-1:7070/whip/endpoint/broadcaster-1
      - TOKEN=verysecret

      - AUDIO_PIPE=audiotestsrc is-live=true wave=sine freq=440 ! audioconvert ! audioresample ! queue ! opusenc ! rtpopuspay pt=111 ssrc=1111 ! queue ! application/x-rtp,media=audio,encoding-name=OPUS,payload=111
      - VIDEO_PIPE=videotestsrc is-live=true pattern=ball ! video/x-raw,width=640,height=480,framerate=30/1 ! videoconvert ! queue ! vp8enc deadline=1 ! rtpvp8pay pt=96 ssrc=2222 ! queue ! application/x-rtp,media=video,encoding-name=VP8,payload=96

      - STUN_SERVER=stun://stun.l.google.com:19302
      - GST_DEBUG=2
    depends_on:
      - injection-1
    networks:
      - media-tree
    profiles:
      - broadcaster

  # Broadcaster 2: SSRC 3333/4444 (in realtà possiamo mettere cio che vogliamo
  # tanto seguirà quelli in sessione di janus)
  whip-client-2:
    build:
      context: ./simple-whip-client
      dockerfile: Dockerfile
    container_name: whip-client-2
    environment:
      - URL=http://injection-1:7070/whip/endpoint/broadcaster-2
      - TOKEN=verysecret

      # Different pattern
      - AUDIO_PIPE=audiotestsrc is-live=true wave=sine freq=880 ! audioconvert ! audioresample ! queue ! opusenc ! rtpopuspay pt=111 ssrc=3333 ! queue ! application/x-rtp,media=audio,encoding-name=OPUS,payload=111
      - VIDEO_PIPE=videotestsrc is-live=true pattern=smpte ! video/x-raw,width=640,height=480,framerate=30/1 ! videoconvert ! queue ! vp8enc deadline=1 ! rtpvp8pay pt=96 ssrc=4444 ! queue ! application/x-rtp,media=video,encoding-name=VP8,payload=96

      - STUN_SERVER=stun://stun.l.google.com:19302
      - GST_DEBUG=2
    depends_on:
      - injection-1
    networks:
      - media-tree
    profiles:
      - broadcaster

  # Test Chain: SSRC 5555/6666
  whip-client-chain:
    build:
      context: ./simple-whip-client
      dockerfile: Dockerfile
    container_name: whip-client-chain
    environment:
      - URL=http://injection-1:7070/whip/endpoint/test-chain
      - TOKEN=verysecret
      - AUDIO_PIPE=audiotestsrc is-live=true wave=sine freq=660 ! audioconvert ! audioresample ! queue ! opusenc ! rtpopuspay pt=111 ssrc=5555 ! queue ! application/x-rtp,media=audio,encoding-name=OPUS,payload=111
      - VIDEO_PIPE=videotestsrc is-live=true pattern=circular ! video/x-raw,width=640,height=480,framerate=30/1 ! videoconvert ! queue ! vp8enc deadline=1 ! rtpvp8pay pt=96 ssrc=6666 ! queue ! application/x-rtp,media=video,encoding-name=VP8,payload=96
      - STUN_SERVER=stun://stun.l.google.com:19302
      - GST_DEBUG=2
    depends_on:
      - injection-1
    networks:
      - media-tree
    profiles:
      - test-chain
  #   Test Scale: SSRC 7777/8888
  whip-client-scale:
    build:
      context: ./simple-whip-client
      dockerfile: Dockerfile
    container_name: whip-client-scale
    environment:
      - URL=http://injection-1:7070/whip/endpoint/test-scale
      - TOKEN=verysecret
      - AUDIO_PIPE=audiotestsrc is-live=true wave=sine freq=770 ! audioconvert ! audioresample ! queue ! opusenc ! rtpopuspay pt=111 ssrc=7777 ! queue ! application/x-rtp,media=audio,encoding-name=OPUS,payload=111
      - VIDEO_PIPE=videotestsrc is-live=true pattern=snow ! video/x-raw,width=640,height=480,framerate=30/1 ! videoconvert ! queue ! vp8enc deadline=1 ! rtpvp8pay pt=96 ssrc=8888 ! queue ! application/x-rtp,media=video,encoding-name=VP8,payload=96
      - STUN_SERVER=stun://stun.l.google.com:19302
      - GST_DEBUG=2
    depends_on:
      - injection-1
    networks:
      - media-tree
    profiles:
      - test-scale

networks:
  media-tree:
    driver: bridge
